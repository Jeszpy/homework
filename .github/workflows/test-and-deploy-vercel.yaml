name: GitHub Actions Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - staging
jobs:
  Tests:
    name: Tests # название конктретной работы в pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout  # клонируем репозиторый
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn # устанавливаем зависимости

      - name: Test
        run: yarn test:e2e # запускаем скрипт тестами
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
  Copy-src-to-'main'-branch:
    name: Copy my folder
    runs-on: ubuntu-latest
    needs: Tests
    steps:
      - uses: actions/checkout@v2
      - name: copy
        env:
          SRC_FOLDER_PATH: 'src'
          TARGET_BRANCH: 'dest'
        run: |
          files=$(find $SRC_FOLDER_PATH -type f) # get the file list
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch                         # fetch branches
          git checkout $TARGET_BRANCH       # checkout to your branch
          git checkout ${GITHUB_REF##*/} -- $files # copy files from the source branch
          git add -A
          git diff-index --quiet HEAD ||  git commit -am "deploy files"  # commit to the repository (ignore if no modification)
          git push origin $TARGET_BRANCH # push to remote branch

#  Deploy-Preview:
#    runs-on: ubuntu-latest
#    needs: Tests
#    steps:
#      - uses: actions/checkout@v2
#      - name: Install Vercel CLI
#        run: npm install --global vercel@latest
#      - name: Pull Vercel Environment Information
#        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Build Project Artifacts
#        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Deploy Project Artifacts to Vercel
#        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}